// <auto-generated />
using System;
using Locacao.Infrastructure.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Locacao.Infrastructure.DataAccess.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20220405220833_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Locacao.Domain.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Cnh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NumeroResidencia")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Locacao.Domain.Entities.Fabricante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Fabricante");

                    b.HasData(
                        new
                        {
                            Id = new Guid("61d4e90e-6d25-4f7f-864c-431d95fbec68"),
                            Nome = "FIAT"
                        },
                        new
                        {
                            Id = new Guid("10f71d32-9501-4ba1-adbc-80627f206184"),
                            Nome = "VW"
                        },
                        new
                        {
                            Id = new Guid("6d0d79ba-e365-4a8a-839d-5e7860f5fce9"),
                            Nome = "FORD"
                        },
                        new
                        {
                            Id = new Guid("d764e865-1320-4f1f-8e45-89b85e799f75"),
                            Nome = "AUDI"
                        },
                        new
                        {
                            Id = new Guid("41f0ca61-e30a-44c0-9528-54c8c2da9c97"),
                            Nome = "MERCEDES"
                        },
                        new
                        {
                            Id = new Guid("3cf2a334-7be3-4aca-bb38-d3b5be815e95"),
                            Nome = "JEEP"
                        });
                });

            modelBuilder.Entity("Locacao.Domain.Entities.Modelo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FabricanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("FabricanteId");

                    b.ToTable("Modelo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("36ac0748-e216-4aff-b36f-183cbea080da"),
                            FabricanteId = new Guid("61d4e90e-6d25-4f7f-864c-431d95fbec68"),
                            Nome = "UNO"
                        },
                        new
                        {
                            Id = new Guid("0467ffd8-0c81-46ca-87a9-e053babbd422"),
                            FabricanteId = new Guid("10f71d32-9501-4ba1-adbc-80627f206184"),
                            Nome = "AMAROK"
                        },
                        new
                        {
                            Id = new Guid("737b2921-ae1a-4529-acd1-cf0c8ceec90d"),
                            FabricanteId = new Guid("6d0d79ba-e365-4a8a-839d-5e7860f5fce9"),
                            Nome = "AEROSTAR"
                        },
                        new
                        {
                            Id = new Guid("536dc589-0ac2-475d-9d2f-6eee0bf1c7f6"),
                            FabricanteId = new Guid("d764e865-1320-4f1f-8e45-89b85e799f75"),
                            Nome = "R8 GT SPYDER"
                        },
                        new
                        {
                            Id = new Guid("9d15d8c6-d366-4b07-ba50-33f095546ffe"),
                            FabricanteId = new Guid("41f0ca61-e30a-44c0-9528-54c8c2da9c97"),
                            Nome = "CITAN"
                        },
                        new
                        {
                            Id = new Guid("ed0c08d8-13bd-4105-acbb-137dfc8a99e5"),
                            FabricanteId = new Guid("3cf2a334-7be3-4aca-bb38-d3b5be815e95"),
                            Nome = "CHEROKEE"
                        });
                });

            modelBuilder.Entity("Locacao.Domain.Entities.Reserva", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataPrevistaDevolucao")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataRetirada")
                        .HasColumnType("date");

                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("Locacao.Domain.Entities.Veiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModeloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.HasKey("Id");

                    b.HasIndex("ModeloId");

                    b.ToTable("Veiculo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("737b2921-ae1a-4529-acd1-cf0c8ceec90d"),
                            ModeloId = new Guid("737b2921-ae1a-4529-acd1-cf0c8ceec90d"),
                            Placa = "EQU2520"
                        });
                });

            modelBuilder.Entity("Locacao.Domain.Entities.Modelo", b =>
                {
                    b.HasOne("Locacao.Domain.Entities.Fabricante", "Fabricante")
                        .WithMany()
                        .HasForeignKey("FabricanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fabricante");
                });

            modelBuilder.Entity("Locacao.Domain.Entities.Reserva", b =>
                {
                    b.HasOne("Locacao.Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Locacao.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Locacao.Domain.Entities.Veiculo", b =>
                {
                    b.HasOne("Locacao.Domain.Entities.Modelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modelo");
                });
#pragma warning restore 612, 618
        }
    }
}
